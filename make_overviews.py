"""
Creates the overview markdown files.
"""
import bibtexparser
import os

from markdown import entry_to_markdown
from names import translation



def make_overview(group_entries, group_list, title, outfile):
    with open(outfile, 'w') as out:
        out.write(f'# {title}\n\n')

        out.write('<!-- This file is automatically generated. Do not edit. -->\n\n')

        for categories in group_list:
            if isinstance(categories, str):
                categories = (categories,)  # Unify how we handle the groups.

            out.write(f'## {translation[categories[0]]}\n\n')
            for cat in categories:
                entries = group_entries.get(cat, [])
                for entry in entries:
                    out.write('* ' + entry_to_markdown(entry))
                    out.write('\n')
            out.write('\n')

if __name__ == '__main__':
    with open('database.bib') as f:
        bib = bibtexparser.load(f)


    # Sort the entries by group.
    group_entries = {}
    for entry in bib.entries:
        groups = entry.get('groups', '').split(',')
        for group in groups:
            group = group.strip()
            group_entries.setdefault(group, []).append(entry)

    ai_groups = [
        ('trees', 'ai-mul-trees'),
        ('randomforest', 'ai-mul-randomforest'),
        ('svm', 'ai-mul-svm'),
        ('knn', 'ai-mul-knn'),
        'ai-mul-lr',
        ('neuralnetworks', 'ai-mul-neuralnetworks'),
        'reinforcement-learning',
        ('genetic', 'ai-mul-genetic'),
        ('nlp', 'ai-mul-llm'),
        'automatonlearning',
        'baysianinference',
        ('clustering', 'ai-mul-clustering'),
        ('datamining', 'ai-mul-datamining'),
        'ai-mul-naive',
        # 'ai-multiple',
        'ai-custom',
        'ai-other',
    ]

    os.makedirs('overview', exist_ok=True)
    make_overview(group_entries, ai_groups,
                  'Overview of used AI techniques',
                  'overview/ai-techniques.md')
