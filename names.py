translation = {
    'trees': 'Decision Trees',
    'ai-mul-trees': 'Decision Trees',
    'randomforest': 'Random Forest',
    'ai-mul-randomforest': 'Random Forest',
    'svm': 'Support Vector Machines',
    'ai-mul-svm': 'Support Vector Machines',
    'knn': 'K-Nearest Neighbors',
    'ai-mul-knn': 'K-Nearest Neighbors',
    'ai-mul-lr': 'Linear/Logistic Regression',
    'neuralnetworks': 'Neural Networks',
    'ai-mul-neuralnetworks': 'Neural Networks',
    'reinforcement-learning': 'Reinforcement Learning',
    'genetic': 'Evolutionary and Genetic Algorithms',
    'ai-mul-genetic': 'Evolutionary and Genetic Algorithms',
    'nlp': 'Natural Language Processing',
    'ai-mul-llm': 'Natural Language Processing',
    'automatonlearning': 'Automaton Learning',
    'baysianinference': 'Bayesian Inference',
    'clustering': 'Clustering',
    'ai-mul-clustering': 'Clustering',
    'datamining': 'Data Mining',
    'ai-mul-datamining': 'Data Mining',
    'ai-mul-adaboost': 'AdaBoost',
    'ai-mul-bagging': 'Bagging',
    'ai-mul-centroid': 'Nearest Centroid',
    'ai-mul-gaussian': 'Gaussian Processes',
    'ai-mul-mcts': 'Monte Carlo Tree Search',
    'ai-mul-naive': 'Naive Bayes',
    'ai-mul-passiveaggresive': 'Passive Aggressive',
    'ai-mul-ridge': 'Ridge Regression',
    'ai-mul-sgd': 'Stochastic Gradient Descent',
    'ai-mul-smac': 'SMAC',
    'ai-multiple': 'Mult. AI-Techniques',
    'ai-custom': 'Custom Algorithm',
    'ai-other': 'Other',

    'sat': 'SAT',
    'sat-3sat': '3Sat',
    'sat-ksat': 'kSat',
    'sat-qbf': 'QBF',
    'sat-basic': 'Basic SAT',
    'sat-portfolio': 'Algorithm/solver selection',
    'sat-maxsat': 'MaxSat',
    'sat-varselection': 'Instance selection',
    'sat-meta': 'Meta analysis/prediction',
    'sat-branching': 'Branching heuristics',
    'sat-generation': 'Generation',
    'sat-parameter': 'SAT parameter selection',
    'sat-multi': 'Mult. SAT tech',
    'sat-multi-solving': 'SAT solving',
    'sat-multi-modelcounting': 'SAT model counting',
    'sat-multi-maxsat': 'MaxSAT',
    'sat-multi-algorithmselection': 'Algorithm/solver selection',
    'sat-prediction': 'Predict solvability',
    'sat-dependency': 'Dependency analysis',
    'sat-solving': 'SAT solving',
    'smt': 'SMT',
    'smt-quantifier': 'Quantifier instantiation',
    'smt-solverselection': 'Solver selection/scheduling',
    'smt-quality': 'Quality assessment',
    'tp': 'Theorem proving',
    'tp-formalism': 'Formalism',
    'tp-fol': 'First order logic',
    'tp-hol': 'Higher order logic',
    'tp-axiomselection': 'Premise selection',
    'tp-proofsynthesis': 'Proof synthesis',
    'tp-symbolic': 'Symbolic reasoning',
    'tp-proofsearch': 'Proof search',
    'tp-heuristicselection': 'Heuristic selection',
    'tp-formulasynthesis': 'Formula synthesis',
    'tp-multiple': 'Mult. TP techniques',
    'tp-mul-synthesis': 'Proof synthesis',
    'tp-mul-positionprediction': 'Position prediction',
    'tp-mul-axiomselection': 'Premise selection',
    'tp-mul-proofrewrite': 'Proof rewrite',
    'tp-mul-symbolguessing': 'Symbol guessing',
    'tp-mul-tacticsprediction': 'Tactics prediction',
    'tp-mul-proofsearch': 'Proof search',
    'tp-proofmining': 'Proof mining',
    'tp-portfolio': 'Portfolio solving',
    'tp-tacticsprediction': 'Tactics prediction',
    'tp-formulaclassification': 'Formula classification',
    'tp-lemmaname': 'Lemma name generation',
    'tp-automationgrade': 'Degree of automation',
    'tp-interactive': 'Interactive',
    'tp-automatic': 'Automatic',
    'tp-mixed': 'Mixed',
    'synthesis': 'Synthesis',
    'synthesis-invariant': 'Invariant learning',
    'synthesis-loopinvariant': 'Loop invariant learning',
    'synthesis-repair': 'Model repair',
    'synthesis-specification': 'Models/specification',
    'synthesis-annotations': 'Annotations',
    'modelchecking': 'Model Checking',
    'other': 'Other',

    'dataset-sat': 'SAT',
    'dataset-tp': 'Theorem Proving',
    'dataset-modelchecking': 'Model Checking',
    'dataset-synthesis': 'Synthesis',
    'dataset-smt': 'SMT',

}
